import numpy as np
import pandas as pd
from keras.models import Sequential
from keras.layers import Dense

# Load the dataset
data = pd.read_csv('alzheimer_dataset.csv')  # Replace with your dataset file

# Split the dataset into input features and target variable
X = data.drop('diagnosis', axis=1).values
y = data['diagnosis'].values

# Normalize the input features
X = (X - np.mean(X)) / np.std(X)

# Convert the target variable to one-hot encoding
y = pd.get_dummies(y).values

# Split the dataset into training and testing sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Define the model architecture
model = Sequential()
model.add(Dense(256, activation='relu', input_dim=X_train.shape[1]))
model.add(Dense(128, activation='relu'))
model.add(Dense(64, activation='relu'))
model.add(Dense(2, activation='softmax'))

# Compile the model
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_test, y_test))

# Evaluate the model
loss, accuracy = model.evaluate(X_test, y_test)
print("Loss:", loss)
print("Accuracy:", accuracy)
